#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt with lede
# Source code repository: https://github.com/coolsnowwolf/lede / Branch: master
#=====================================================================================

name: Build OpenWrt with lede

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Select Amlogic SoC"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - s905x3_s905d_s912
          - a311d
          - s922x
          - s922x-n2
          - s922x-reva
          - s905x3
          - s905x2
          - s905x2-km3
          - s912
          - s912-m8s
          - s905d
          - s905d-ki
          - s905x
          - s905w
          - s905
          - s905l3a
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.10.135_5.15.50"
        type: choice
        options:
          - 5.4.210_5.10.135_5.15.50
          - 5.4.210_5.10.135
          - 5.10.135_5.15.50
          - 5.15.50_5.19.1
          - 5.4.210
          - 5.10.135
          - 5.15.50
          - 5.19.1
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      openwrt_size:
        description: "Set the rootfs size(Unit: MiB)."
        required: false
        default: "960"

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: router-config/lede-master/feeds.conf.default
  CONFIG_FILE: router-config/lede-master/.config
  DIY_P1_SH: router-config/lede-master/diy-part1.sh
  DIY_P2_SH: router-config/lede-master/diy-part2.sh
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 检查服务器配置
        run: |
         echo "警告⚠"
         echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
         echo "云编译建议取消勾选Node.js及其相关插件！"
         echo "已知CPU型号（降序）：8370C,8272CL,8171M,E5系列"
         echo "--------------------------CPU信息--------------------------"
         echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
         echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
         echo "--------------------------内存信息--------------------------"
         echo "已安装内存详细信息："
         sudo lshw -short -C memory | grep GiB
         echo -e "\n"
         echo "--------------------------硬盘信息--------------------------"
         echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
         echo "硬盘详情："
         df -Th

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          # 清理多余文件，腾出磁盘空间
          docker rmi $(docker images -q)
          # sudo -E apt-get remove -y --purge azure-cli ghc zulu* llvm* firefox google* dotnet* powershell mysql* php* android*
          # sudo rm -rf /etc/mysql /etc/php /swapfile

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT ${PWD}
          git clone --depth 1 ${REPO_URL} -b ${REPO_BRANCH} openwrt
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

      - name: Load custom feeds
        run: |
          [[ -e "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"

      - name: Build OpenWrt firmware
        if: steps.compile.outputs.status == 'success' && !cancelled()
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz
          openwrt_soc: ${{ github.event.inputs.openwrt_soc }}
          openwrt_kernel: ${{ github.event.inputs.openwrt_kernel }}
          auto_kernel: ${{ github.event.inputs.auto_kernel }}
          openwrt_size: ${{ github.event.inputs.openwrt_size }}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: OpenWrt_Aml_lede_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            This is OpenWrt firmware for Amlogic s9xxx tv box
            * Firmware information
            Default IP: 192.168.1.254
            Default username: root
            Default password: password
            Default WIFI name: OpenWrt
            Default WIFI password: none
            Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt
